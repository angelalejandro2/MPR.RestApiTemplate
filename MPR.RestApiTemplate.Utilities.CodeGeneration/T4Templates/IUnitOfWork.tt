<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.cs" #>
using MPR.RestApiTemplate.Domain.Interfaces.Repositories;

<#
	var entitiesPath = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), @"..\..\MPR.RestApiTemplate.Domain\Entities");
	var entities = Directory.GetFiles(entitiesPath, "*.cs")
		.Select(f => Path.GetFileNameWithoutExtension(f))
		.ToList();

	var contextsPath = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), @"..\..\MPR.RestApiTemplate.Infrastructure\Context");
	var contexts = Directory.GetFiles(contextsPath, "*.cs")
		.Select(f => Path.GetFileNameWithoutExtension(f))
		.ToList();
#>
namespace MPR.RestApiTemplate.Domain.Interfaces
{
	public partial interface IUnitOfWork : IDisposable
	{
<#
	foreach (var entity in entities)
	{
#>
		I<#= entity #>Repository <#= entity #>Repository { get; }
<#
	}
	foreach (var context in contexts)
	{
#>
		I<#= context #>SpRepository <#= context #>SpRepository { get; }
<#
	}
#>

		Task<int> SaveChangesAsync();
	}
}