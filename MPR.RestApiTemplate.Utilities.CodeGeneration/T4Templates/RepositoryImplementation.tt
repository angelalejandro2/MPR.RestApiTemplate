// Autogenerated Code - Do not implement custom logic here. 
// Implement custom logic in partial class

<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Text.RegularExpressions" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension=".generated.cs" #>
using MPR.RestApiTemplate.Domain.Entities;
using MPR.RestApiTemplate.Domain.Interfaces.Repositories;
using MPR.RestApiTemplate.Infrastructure.Context;

namespace MPR.RestApiTemplate.Infrastructure.Repositories
{
<#
	var dbContextPath = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), @"..\..\MPR.RestApiTemplate.Infrastructure\Context");
	var dbContexts = Directory.GetFiles(dbContextPath, "*.cs");

	foreach (var dbContext in dbContexts)
	{	
		var dbContextName = Path.GetFileNameWithoutExtension(dbContext);
		var dbContextNameLowered = char.ToLower(dbContextName[0]) + dbContextName.Substring(1);
		var dbContextCode = File.ReadAllText(dbContext);
		var matches = Regex.Matches(dbContextCode, @"DbSet<(?<entity>\w+)>");
		var entityNames = matches.Cast<Match>().Select(m => m.Groups["entity"].Value).Distinct().ToList();

		foreach (var entityName in entityNames)
		{
			var entityNameLowered = char.ToLower(entityName[0]) + entityName.Substring(1);
#>
	public partial class <#= entityName #>Repository(<#= dbContextName #> <#= dbContextNameLowered #>) : GenericRepository<<#= entityName #>>(<#= dbContextNameLowered #>), I<#= entityName #>Repository { }
<#
		}
	}
#>
}