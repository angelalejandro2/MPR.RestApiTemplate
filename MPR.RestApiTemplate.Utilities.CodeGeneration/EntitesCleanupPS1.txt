$folderPath = "Entities"

Get-ChildItem -Path $folderPath -Filter *.cs -Recurse | ForEach-Object {
    $filePath = $_.FullName
    $lines = Get-Content $filePath

    # Convertir a lista mutable
    $mutableLines = [System.Collections.Generic.List[string]]::new()
    $mutableLines.AddRange($lines)

    # Eliminar using Microsoft.EntityFrameworkCore;
    $mutableLines = $mutableLines | Where-Object { $_ -notmatch '^\s*using\s+Microsoft\.EntityFrameworkCore\s*;' }

    # Buscar la línea de la clase
    $classIndex = $mutableLines | Select-String -Pattern 'public\s+partial\s+class' | Select-Object -First 1

    if ($classIndex) {
        $index = $classIndex.LineNumber - 1

        # Filtrar las líneas anteriores al public partial class
        $linesBeforeClass = $mutableLines[0..($index - 1)]
        $linesAfterClass = $mutableLines[$index..($mutableLines.Count - 1)]

        # Conservar solo las líneas que no sean atributos
        $linesBeforeClassCleaned = $linesBeforeClass | Where-Object { $_ -notmatch '^\s*\[.*\]\s*$' }

        # Reconstruir el contenido
        $finalContent = $linesBeforeClassCleaned + $linesAfterClass

        # Sobrescribir el archivo
        Set-Content -Path $filePath -Value $finalContent
        Write-Host "Limpio: $filePath"
    } else {
        Write-Host "Clase no encontrada en: $filePath"
    }
}